/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */

// Base Types
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
type Maybe<T> = T | null | undefined
type Scalars = {
  Boolean: boolean
  String: string
  Float: number
  Int: number
}

// Operation related types
export type ProductDescriptionQueryQueryVariables = Exact<{
  slug: Maybe<Scalars['String']>
}>

export type ProductDescriptionQueryQuery = {
  vtex: {
    product: Maybe<{ description: Maybe<string>; productName: Maybe<string> }>
  }
}

// Query Related Code

export const ProductDescriptionQuery = {
  query:
    'query ProductDescriptionQuery($slug: String) {\n  vtex {\n    product(slug: $slug) {\n      description\n      productName\n    }\n  }\n}\n',
  sha256Hash:
    '9a078b644feae521e7162bb50d625b8a5517c560a3a70bd4d6232ba72b88bbd4',
  operationName: 'ProductDescriptionQuery',
}
