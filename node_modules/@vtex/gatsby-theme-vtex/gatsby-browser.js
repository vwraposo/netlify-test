"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.onRouteUpdate = exports.wrapPageElement = exports.wrapRootElement = exports.replaceHydrateFunction = void 0;
const react_1 = __importStar(require("react"));
const react_dom_1 = __importDefault(require("react-dom"));
require("requestidlecallback-polyfill");
// Webpack + TS magic to make this work
const { OrderFormProvider } = require('./src/sdk/orderForm/Provider');
const { default: VTEXRCProvider } = require('./src/sdk/pixel/vtexrc/index');
const { Progress, onRouteUpdate: progressOnRouteUpdate, } = require('./src/sdk/progress');
exports.replaceHydrateFunction = () => (element, container, callback) => {
    const development = process.env.GATSBY_BUILD_STAGE.includes('develop');
    const { unstable_createRoot: createRoot } = react_dom_1.default;
    const root = createRoot(container, {
        hydrate: !development,
        hydrationOptions: {
            onHydrated: callback,
        },
    });
    root.render(element);
};
exports.wrapRootElement = ({ element }) => {
    const root = (react_1.default.createElement(VTEXRCProvider, null,
        react_1.default.createElement(OrderFormProvider, null, element)));
    if (process.env.NODE_ENV === 'development') {
        return react_1.default.createElement(react_1.StrictMode, null, root);
    }
    return root;
};
exports.wrapPageElement = ({ element, props: { location }, }) => (react_1.default.createElement(Progress, { location: location }, element));
exports.onRouteUpdate = () => {
    progressOnRouteUpdate();
};
