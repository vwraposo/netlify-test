"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.query = exports.useProductsShelf = void 0;
const gatsby_plugin_graphql_1 = require("@vtex/gatsby-plugin-graphql");
const useQuery_1 = require("../graphql/useQuery");
const ProductsShelfQuery_graphql_1 = require("./__generated__/ProductsShelfQuery.graphql");
exports.useProductsShelf = (variables) => {
    var _a, _b;
    const { data } = useQuery_1.useQuery(Object.assign(Object.assign({}, ProductsShelfQuery_graphql_1.ProductsShelfQuery), { variables, suspense: true }));
    return {
        products: (_b = (_a = data === null || data === void 0 ? void 0 : data.vtex) === null || _a === void 0 ? void 0 : _a.products) !== null && _b !== void 0 ? _b : null,
    };
};
exports.query = gatsby_plugin_graphql_1.gql `
  query ProductsShelfQuery(
    $simulationBehavior: VTEX_SimulationBehavior = default
    $hideUnavailableItems: Boolean = true
    $salesChannel: String = "1"
    $collection: String
    $category: String = ""
    $orderBy: String = "OrderByTopSaleDESC"
    $query: String
    $map: String
    $from: Int = 0
    $to: Int = 9
  ) {
    vtex {
      products(
        query: $query
        map: $map
        from: $from
        to: $to
        orderBy: $orderBy
        collection: $collection
        salesChannel: $salesChannel
        hideUnavailableItems: $hideUnavailableItems
        category: $category
        simulationBehavior: $simulationBehavior
      ) {
        ...ProductSummary_product
      }
    }
  }
`;
