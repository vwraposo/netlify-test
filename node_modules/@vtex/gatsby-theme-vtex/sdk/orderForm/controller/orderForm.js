"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fragment = exports.startOrderForm = exports.setOrderFormState = exports.queue = void 0;
const gatsby_plugin_graphql_1 = require("@vtex/gatsby-plugin-graphql");
const p_queue_1 = __importDefault(require("p-queue"));
const storage_1 = require("../storage");
// Queue to make changes to the orderForm
exports.queue = new p_queue_1.default({
    concurrency: 1,
});
// This queue will be unpaused once we have an orderForm
exports.queue.pause();
exports.setOrderFormState = (orderForm, cb) => {
    cb(orderForm);
    storage_1.storage.set(orderForm);
    document.cookie = `checkout.vtex.com=__ofid=${orderForm.id}; path=/;`;
};
exports.startOrderForm = (orderForm, cb) => __awaiter(void 0, void 0, void 0, function* () {
    exports.setOrderFormState(orderForm, cb);
    exports.queue.start();
});
exports.fragment = gatsby_plugin_graphql_1.gql `
  fragment OrderFormFragment_orderForm on VTEX_OrderForm {
    id
    items {
      additionalInfo {
        brandName
      }
      attachments {
        name
        content
      }
      attachmentOfferings {
        name
        required
        schema
      }
      bundleItems {
        additionalInfo {
          brandName
        }
        attachments {
          name
          content
        }
        attachmentOfferings {
          name
          required
          schema
        }
        availability
        detailUrl
        id
        imageUrls {
          at1x
          at2x
          at3x
        }
        listPrice
        measurementUnit
        name
        offerings {
          id
          name
          price
          type
          attachmentOfferings {
            name
            required
            schema
          }
        }
        price
        productCategories
        productCategoryIds
        productRefId
        productId
        quantity
        seller
        sellingPrice
        skuName
        skuSpecifications {
          fieldName
          fieldValues
        }
        unitMultiplier
        uniqueId
        refId
      }
      parentAssemblyBinding
      sellingPriceWithAssemblies
      options {
        assemblyId
        id
        quantity
        seller
        inputValues
        options {
          assemblyId
          id
          quantity
          seller
          inputValues
          options {
            assemblyId
            id
            quantity
            seller
            inputValues
          }
        }
      }
      availability
      detailUrl
      id
      imageUrls {
        at1x
        at2x
        at3x
      }
      listPrice
      manualPrice
      measurementUnit
      name
      offerings {
        id
        name
        price
        type
        attachmentOfferings {
          name
          required
          schema
        }
      }
      price
      productCategories
      productCategoryIds
      productRefId
      productId
      quantity
      seller
      sellingPrice
      skuName
      skuSpecifications {
        fieldName
        fieldValues
      }
      unitMultiplier
      uniqueId
      refId
    }
    canEditData
    loggedIn
    userProfileId
    userType
    marketingData {
      coupon
      utmCampaign
      utmMedium
      utmSource
      utmiCampaign
      utmiPart
      utmiPage
    }
    totalizers {
      id
      name
      value
    }
    shipping {
      countries
      availableAddresses {
        addressId
        addressType
        city
        complement
        country
        neighborhood
        number
        postalCode
        receiverName
        reference
        state
        street
        isDisposable
      }
      selectedAddress {
        addressId
        addressType
        city
        complement
        country
        neighborhood
        number
        postalCode
        receiverName
        reference
        state
        street
        isDisposable
      }
      deliveryOptions {
        id
        price
        estimate
        isSelected
      }
      isValid
    }
    paymentData {
      paymentSystems {
        id
        name
        groupName
        validator {
          regex
          mask
          cardCodeRegex
          cardCodeMask
          weights
          useCvv
          useExpirationDate
          useCardHolderName
          useBillingAddress
        }
        stringId
        requiresDocument
        isCustom
        description
        requiresAuthentication
        dueDate
      }
      payments {
        paymentSystem
        bin
        accountId
        tokenId
        installments
        referenceValue
        value
      }
      installmentOptions {
        paymentSystem
        installments {
          count
          hasInterestRate
          interestRate
          value
          total
        }
      }
      availableAccounts {
        accountId
        paymentSystem
        paymentSystemName
        cardNumber
        bin
      }
      isValid
    }
    clientProfileData {
      email
      firstName
      lastName
      document
      documentType
      phone
      isValid
    }
    clientPreferencesData {
      locale
      optInNewsletter
    }
    messages {
      couponMessages {
        code
      }
      generalMessages {
        code
        text
        status
      }
    }
    value
    allowManualPrice
  }
`;
