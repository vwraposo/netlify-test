declare global {
    interface Window {
        __RENDER_6_RUNTIME__: any;
        __RENDER_7_RUNTIME__: any;
        __RUNTIME__: any;
        $: typeof import('jquery');
        RenderExtensionLoader: any;
    }
    namespace JQuery {
        interface jqXHR<TResolve> {
            retry: (opts: {
                timeout?: number;
                times?: number;
            }) => TResolve;
        }
    }
}
declare class RenderExtensionLoader {
    private account;
    private workspace;
    private path;
    private locale;
    private publicEndpoint;
    private verbose;
    private timeout;
    private renderMajor;
    private runtime;
    private get;
    private styles;
    private scripts;
    constructor({ account, workspace, path, locale, publicEndpoint, verbose, timeout, }: {
        account: any;
        workspace: any;
        path: any;
        locale: any;
        publicEndpoint: any;
        verbose: any;
        timeout: any;
    });
    getRuntimeContext: () => Promise<{
        runtime: any;
        scripts: string[];
        styles: string[];
    }>;
    load: () => Promise<any>;
    update: (runtimeOrUpdateFn: any) => any;
    render: (extension: any, element: any, props: any) => any;
    private loadExtensionPointsContext;
    private setGlobalContext;
    private getExistingScriptSrcs;
    private scriptOnPage;
    private addScriptToPage;
    private addStyleToPage;
    private time;
    private timeEnd;
}
export default RenderExtensionLoader;
