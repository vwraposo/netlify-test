"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.patch = exports.clear = exports.create = void 0;
const items = 'account.id,account.accountName,store.channel,store.countryCode,store.cultureInfo,store.currencyCode,store.currencySymbol,store.admin_cultureInfo,creditControl.creditAccounts,creditControl.deadlines,creditControl.minimumInstallmentValue,authentication.storeUserId,authentication.storeUserEmail,profile.firstName,profile.document,profile.email,profile.id,profile.isAuthenticated,profile.lastName,profile.phone,public.favoritePickup,public.utm_source,public.utm_medium,public.utm_campaign,public.utmi_cp,public.utmi_p,public.utmi_pc';
exports.create = () => __awaiter(void 0, void 0, void 0, function* () {
    const params = new URLSearchParams(window.location.search);
    params.append('items', items);
    const response = yield fetch(`/api/sessions?${params.toString()}`, {
        method: 'POST',
        credentials: 'same-origin',
        body: '{}',
        headers: {
            accept: 'application/json',
            'content-type': 'application/json',
        },
    });
    return response.json();
});
exports.clear = () => __awaiter(void 0, void 0, void 0, function* () {
    const response = yield fetch('/api/sessions/invalidToken?items=*', {
        credentials: 'same-origin',
        headers: {
            'content-type': 'application/json',
        },
    });
    return response.json();
});
exports.patch = (data = {}) => __awaiter(void 0, void 0, void 0, function* () {
    const response = yield fetch(`/api/sessions?${window.location.search}`, {
        method: 'PATCH',
        body: JSON.stringify(data),
        credentials: 'same-origin',
        headers: {
            accept: 'application/json',
            'content-type': 'application/json',
        },
    });
    return response.json();
});
