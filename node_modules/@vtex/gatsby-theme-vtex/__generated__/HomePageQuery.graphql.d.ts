/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */
declare type Exact<T extends {
    [key: string]: unknown;
}> = {
    [K in keyof T]: T[K];
};
declare type Maybe<T> = T | null | undefined;
export declare type HomePageQueryQueryVariables = Exact<{
    [key: string]: never;
}>;
export declare type HomePageQueryQuery = {
    vtex: {
        productSearch: Maybe<{
            products: Maybe<Array<Maybe<{
                productId: Maybe<string>;
                productName: Maybe<string>;
                description: Maybe<string>;
                linkText: Maybe<string>;
                items: Maybe<Array<Maybe<{
                    itemId: Maybe<string>;
                    images: Maybe<Array<Maybe<{
                        imageUrl: Maybe<string>;
                        imageText: Maybe<string>;
                    }>>>;
                    sellers: Maybe<Array<Maybe<{
                        sellerId: Maybe<string>;
                        commertialOffer: Maybe<{
                            AvailableQuantity: Maybe<number>;
                            Price: Maybe<number>;
                            ListPrice: Maybe<number>;
                        }>;
                    }>>>;
                }>>>;
            }>>>;
        }>;
    };
};
export declare const HomePageQuery: {
    query: string;
    sha256Hash: string;
    operationName: string;
};
export {};
