"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fragment = void 0;
const store_ui_1 = require("@vtex/store-ui");
const gatsby_1 = require("gatsby");
const react_1 = __importDefault(require("react"));
const format = (x) => x.length > 100 ? `${x.slice(0, 100)} ...Truncated` : x;
const AboveTheFold = (props) => (react_1.default.createElement(react_1.default.Fragment, null,
    react_1.default.createElement(store_ui_1.Center, { height: "150px" },
        react_1.default.createElement(store_ui_1.Text, { sx: { width: '50%' } }, "This is the Above the fold part of your product template. All sync items should be rendered in here. Thus, make sure all data rendered in this part is fetched during Server Side Rendering and revalidated on the client if necessary")),
    react_1.default.createElement(store_ui_1.Center, { height: "150px" },
        react_1.default.createElement(store_ui_1.Text, { sx: { width: '50%' } }, "Product info will be available via the \"data.vtex.product\" prop. Also, if you want to fetch more fields, you can add these fields in the \"ProductDetailsTemplate_product\" fragment. These fields will be available in the same prop as above.")),
    react_1.default.createElement(store_ui_1.Center, null,
        react_1.default.createElement(store_ui_1.Text, { sx: { width: '50%' } },
            "Currently, this page's props are:",
            react_1.default.createElement("ul", null, Object.keys(props)
                .filter((k) => typeof props[k] === 'object' ||
                typeof props[k] === 'string' ||
                typeof props[k] === 'number')
                .map((key) => (react_1.default.createElement("li", { key: key },
                key,
                ": ",
                format(JSON.stringify(props[key]))))))))));
exports.fragment = gatsby_1.graphql `
  fragment ProductDetailsTemplate_product on VTEX_Product {
    productReference
    productName
    linkText
    items {
      images {
        imageUrl
        imageText
      }
      videos {
        videoUrl
      }
    }
    productClusters {
      name
    }
  }
`;
exports.default = AboveTheFold;
