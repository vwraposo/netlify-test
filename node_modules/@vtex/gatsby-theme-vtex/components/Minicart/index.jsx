"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx jsx */
const store_ui_1 = require("@vtex/store-ui");
const react_1 = require("react");
const useIdleEffect_1 = require("../../sdk/useIdleEffect");
const Button_1 = __importDefault(require("./Button"));
const preloadDrawer = () => Promise.resolve().then(() => __importStar(require('./Drawer')));
const MinicartDrawer = react_1.lazy(preloadDrawer);
const Minicart = () => {
    const [isOpen, setOpen] = react_1.useState(false);
    const toggle = () => setOpen(!isOpen);
    useIdleEffect_1.useIdleEffect(() => {
        preloadDrawer();
    }, []);
    const customVariant = 'minicart';
    return (<react_1.Fragment>
      <Button_1.default variant={customVariant} onClick={toggle}/>
      {isOpen ? (<react_1.Suspense fallback={null}>
          <MinicartDrawer variant={customVariant} isOpen onClose={toggle}/>
        </react_1.Suspense>) : null}
    </react_1.Fragment>);
};
exports.default = Minicart;
