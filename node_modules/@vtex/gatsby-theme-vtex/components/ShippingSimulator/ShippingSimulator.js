"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const gatsby_plugin_i18n_1 = require("@vtex/gatsby-plugin-i18n");
const store_ui_1 = require("@vtex/store-ui");
const Preview_1 = __importDefault(require("./Preview"));
const ShippingTable_1 = __importDefault(require("./ShippingTable"));
const PostalCodeInput_1 = __importDefault(require("./PostalCodeInput"));
const ShippingSimulator = ({ variant, skuId, seller, loading, isValid, onCalculateShipping, onPostalCode, postalCode, shipping, }) => {
    const intl = gatsby_plugin_i18n_1.useIntl();
    if (!seller || !skuId) {
        return react_1.default.createElement(Preview_1.default, { variant: variant });
    }
    return (react_1.default.createElement(store_ui_1.Box, { variant: `${variant}.container` },
        react_1.default.createElement(store_ui_1.Box, { as: "form", variant: `${variant}.fieldContainer`, onSubmit: (e) => {
                e.preventDefault();
                onCalculateShipping === null || onCalculateShipping === void 0 ? void 0 : onCalculateShipping();
            } },
            react_1.default.createElement("label", { htmlFor: "postalCode" },
                react_1.default.createElement(store_ui_1.Text, { variant: `${variant}.inputLabel` }, intl.formatMessage({ id: 'shipping.postalCodeLabel' })),
                react_1.default.createElement(PostalCodeInput_1.default, { variant: `${variant}.input`, id: "postalCode", name: "postalCode", onChange: (e) => {
                        onPostalCode(e.target.value);
                    }, value: postalCode })),
            react_1.default.createElement(store_ui_1.Button, { variant: `${variant}.button`, disabled: !isValid || loading, type: "submit" }, intl.formatMessage({ id: 'shippingSimulator.label' }))),
        loading && react_1.default.createElement(Preview_1.default, { variant: `${variant}.preview` }),
        shipping && !loading && (react_1.default.createElement(ShippingTable_1.default, { shipping: shipping, variant: `${variant}.table` }))));
};
exports.default = ShippingSimulator;
