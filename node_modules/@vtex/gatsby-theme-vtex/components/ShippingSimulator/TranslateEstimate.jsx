"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TranslateEstimate = void 0;
const react_1 = __importStar(require("react"));
const gatsby_plugin_i18n_1 = require("@vtex/gatsby-plugin-i18n");
const getTranslateId = (shippingEstimate, isPickup) => {
    const shippingEstimateString = shippingEstimate === null || shippingEstimate === void 0 ? void 0 : shippingEstimate.split(/[0-9]+/)[1];
    return (shippingEstimate &&
        shippingEstimateString &&
        `shippingEstimate${isPickup ? 'Pickup' : ''}-${shippingEstimate.split(/[0-9]+/)[1]}`);
};
const getTimeAmount = (shippingEstimate) => {
    return shippingEstimate === null || shippingEstimate === void 0 ? void 0 : shippingEstimate.split(/\D+/)[0];
};
const getScheduledWindow = (scheduled, intl) => {
    return scheduled.startDateUtc && scheduled.endDateUtc
        ? {
            date: intl.formatDate(scheduled.startDateUtc, {
                year: 'numeric',
                month: 'numeric',
                day: 'numeric',
            }),
            startDate: intl.formatTime(scheduled.startDateUtc, { timeZone: 'UTC' }),
            endDate: intl.formatTime(scheduled.endDateUtc, { timeZone: 'UTC' }),
        }
        : {
            date: null,
            startDate: null,
            endDate: null,
        };
};
exports.TranslateEstimate = ({ isPickup, lowerCase = false, shippingEstimate = '', scheduled, }) => {
    const intl = gatsby_plugin_i18n_1.useIntl();
    if (scheduled) {
        const { date, startDate, endDate } = getScheduledWindow(scheduled, intl);
        const hasDeliveryWindow = !!(startDate && endDate);
        const translatedEstimateDeliveryWindow = hasDeliveryWindow
            ? intl.formatMessage({
                id: 'shippingEstimate-scheduled',
            }, { date, startDate, endDate })
            : intl.formatMessage({
                id: 'shippingEstimate-scheduled-no-dates',
            });
        return (<react_1.Fragment>
        {lowerCase
            ? translatedEstimateDeliveryWindow.toLowerCase()
            : translatedEstimateDeliveryWindow}
      </react_1.Fragment>);
    }
    const id = getTranslateId(shippingEstimate, isPickup);
    const timeAmount = getTimeAmount(shippingEstimate);
    let translatedEstimate = '';
    if (id && timeAmount && intl) {
        translatedEstimate = intl.formatMessage({ id }, { timeAmount });
    }
    if (lowerCase) {
        translatedEstimate = translatedEstimate.toLowerCase();
    }
    return <react_1.Fragment>{translatedEstimate}</react_1.Fragment>;
};
