"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx jsx */
const react_1 = require("react");
const store_ui_1 = require("@vtex/store-ui");
const Button_1 = __importDefault(require("./Button"));
const Input_1 = __importDefault(require("./Input"));
const Provider_1 = __importDefault(require("./Provider"));
const Container_1 = __importDefault(require("./Container"));
const SearchSuggestions = react_1.lazy(() => Promise.resolve().then(() => __importStar(require('../SearchSuggestions'))));
const SearchBar = ({ popoverState = { placement: 'bottom-start', unstable_flip: true }, variant = 'searchbar', 'aria-label': label, placeholder, }) => (store_ui_1.jsx(Container_1.default, null,
    store_ui_1.jsx(Provider_1.default, null,
        store_ui_1.jsx(Input_1.default, { variant: variant, "aria-label": label, placeholder: placeholder, popoverState: popoverState },
            store_ui_1.jsx(react_1.Suspense, { fallback: null },
                store_ui_1.jsx(SearchSuggestions, null))),
        store_ui_1.jsx(Button_1.default, { variant: variant, "aria-label": `${label} button` }))));
exports.default = SearchBar;
