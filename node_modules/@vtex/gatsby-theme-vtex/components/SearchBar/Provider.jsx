"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const store_ui_1 = require("@vtex/store-ui");
const hooks_1 = require("./hooks");
const controller_1 = require("../../sdk/search/controller");
const SearchBarProvider = ({ children, debounceInterval = 250 }) => {
    const [syncTerm, setSyncTerm] = react_1.useState('');
    const [asyncTerm, setAsyncTerm] = react_1.useState(syncTerm);
    const setTermDebounced = react_1.useMemo(() => store_ui_1.debounce(setAsyncTerm, debounceInterval), [debounceInterval]);
    const setTerm = react_1.useCallback((term) => {
        setSyncTerm(term);
        setTermDebounced(term);
    }, [setTermDebounced]);
    react_1.useEffect(() => {
        return () => setTermDebounced.clear();
    }, [setTermDebounced]);
    return (<hooks_1.SearchBarContext.Provider value={{
        syncTerm,
        asyncTerm,
        setTerm,
        onSearch: controller_1.search,
    }}>
      {children}
    </hooks_1.SearchBarContext.Provider>);
};
exports.default = SearchBarProvider;
