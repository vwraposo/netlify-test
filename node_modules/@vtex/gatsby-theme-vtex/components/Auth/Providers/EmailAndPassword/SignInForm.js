"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const store_ui_1 = require("@vtex/store-ui");
const gatsby_plugin_i18n_1 = require("@vtex/gatsby-plugin-i18n");
const SignInForm = ({ variant, onSubmit, onSignUp, onForgotPassword, state: { state }, }) => {
    const { formatMessage } = gatsby_plugin_i18n_1.useIntl();
    const email = react_1.useRef(null);
    const password = react_1.useRef(null);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(store_ui_1.Box, { variant: `${variant}.title` }, formatMessage({
            id: 'login.page.emailAndPassword.signInForm.title',
            defaultMessage: 'Sign in with e-mail and password',
        })),
        react_1.default.createElement(store_ui_1.Box, { as: "form", onSubmit: (e) => {
                var _a, _b, _c, _d;
                e.preventDefault();
                onSubmit((_b = (_a = email.current) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : '', (_d = (_c = password.current) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : '');
            }, variant: variant },
            react_1.default.createElement(store_ui_1.Input, { ref: email, type: "email", name: "email", id: "email", placeholder: formatMessage({
                    id: 'login.page.emailAndPassword.signInForm.emailPlaceholder',
                    defaultMessage: 'Eg: example@gmail.com',
                }), autoComplete: "username" }),
            react_1.default.createElement(store_ui_1.Input, { ref: password, type: "password", name: "password", id: "password", placeholder: formatMessage({
                    id: 'login.page.emailAndPassword.signInForm.password',
                    defaultMessage: 'Insert your password',
                }), autoComplete: "current-password" }),
            react_1.default.createElement(store_ui_1.Box, { variant: `${variant}.forgotPassword`, onClick: () => onForgotPassword() }, formatMessage({
                id: 'login.page.emailAndPassword.signInForm.forgotPassword',
                defaultMessage: 'Forgot my password',
            })),
            state === 'signInForm.invalidEmailInput' && (react_1.default.createElement(store_ui_1.Alert, { variant: "signInDanger" }, formatMessage({
                id: 'login.page.emailAndPassword.signInForm.invalidEmailInput',
                defaultMessage: 'Sign in with a valid e-mail',
            }))),
            state === 'signInForm.invalidPasswordInput' && (react_1.default.createElement(store_ui_1.Alert, { variant: "signInDanger" }, formatMessage({
                id: 'login.page.emailAndPassword.signInForm.invalidPasswordInput',
                defaultMessage: 'Sign in with a valid password',
            }))),
            state === 'signInForm.authError' && (react_1.default.createElement(store_ui_1.Alert, { variant: "signInDanger" }, formatMessage({
                id: 'login.page.emailAndPassword.signInForm.authError',
                defaultMessage: 'Signing in failed. Please try again later',
            }))),
            react_1.default.createElement(store_ui_1.Button, null, formatMessage({
                id: 'login.page.emailAndPassword.signInForm.submitButton',
                defaultMessage: 'Sign In',
            }))),
        react_1.default.createElement(store_ui_1.Box, { variant: `${variant}.signup`, onClick: () => onSignUp() }, formatMessage({
            id: 'login.page.emailAndPassword.signInForm.signupButton',
            defaultMessage: "Don't have an account yet ? Sign Up",
        }))));
};
exports.default = SignInForm;
