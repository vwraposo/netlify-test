"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const Service_1 = require("../../../../sdk/auth/Service");
const useOnLoginSuccessful_1 = require("../../../../sdk/auth/useOnLoginSuccessful");
const useStartLogin_1 = require("../../../../sdk/auth/useStartLogin");
const validate_1 = require("../../../../sdk/auth/validate");
const AccessCodeForm_1 = __importDefault(require("./AccessCodeForm"));
const EmailForm_1 = __importDefault(require("./EmailForm"));
const state_1 = require("./state");
const EmailVerification = ({ variant: v, returnUrl, }) => {
    const [state, dispatch] = react_1.useReducer(state_1.reducer, { state: 'emailForm' });
    const onLoginSuccessful = useOnLoginSuccessful_1.useOnLoginSuccessful();
    const startLogin = useStartLogin_1.useStartLogin();
    const variant = `emailVerification.${v}`;
    return state.state.startsWith('emailForm') ? (<EmailForm_1.default state={state} variant={variant} onSubmit={(email) => __awaiter(void 0, void 0, void 0, function* () {
        if (!validate_1.isValidEmail(email)) {
            dispatch({ type: 'emailForm.invalidEmailInput' });
            return;
        }
        try {
            yield startLogin({ user: email });
            yield Service_1.sendAccessKey({ email });
            dispatch({ type: 'accessCodeForm', email });
        }
        catch (err) {
            dispatch({ type: 'emailForm.authError' });
        }
    })}/>) : (<AccessCodeForm_1.default state={state} variant={variant} onBack={() => dispatch({ type: 'emailForm' })} onSubmit={(code) => __awaiter(void 0, void 0, void 0, function* () {
        const { email } = state;
        if (!validate_1.isValidAccessCode(code)) {
            dispatch({ type: 'accessCodeForm.invalidAccessCode' });
            return;
        }
        if (!email) {
            dispatch({ type: 'emailForm.invalidEmailInput' });
            return;
        }
        try {
            yield Service_1.validateAccessKey({
                accessKey: code,
                login: email,
            });
            onLoginSuccessful(returnUrl);
        }
        catch (err) {
            dispatch({ type: 'accessCodeForm.authError' });
        }
    })}/>);
};
exports.default = EmailVerification;
