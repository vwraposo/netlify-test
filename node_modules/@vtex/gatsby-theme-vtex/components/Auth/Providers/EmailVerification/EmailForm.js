"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const store_ui_1 = require("@vtex/store-ui");
const gatsby_plugin_i18n_1 = require("@vtex/gatsby-plugin-i18n");
const EmailForm = ({ variant, state: { state }, onSubmit }) => {
    const { formatMessage } = gatsby_plugin_i18n_1.useIntl();
    const input = react_1.useRef(null);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(store_ui_1.Box, { variant: `${variant}.title` }, formatMessage({
            id: 'login.page.emailVerification.emailForm.title',
            defaultMessage: 'Receive access code by e-mail',
        })),
        react_1.default.createElement(store_ui_1.Box, { as: "form", onSubmit: (e) => {
                var _a, _b;
                e.preventDefault();
                onSubmit((_b = (_a = input.current) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : '');
            }, variant: variant },
            react_1.default.createElement(store_ui_1.Input, { ref: input, type: "email", name: "email", id: "email", placeholder: formatMessage({
                    id: 'login.page.emailVerification.emailForm.emailPlaceholder',
                    defaultMessage: 'Add your email',
                }) }),
            state === 'emailForm.invalidEmailInput' && (react_1.default.createElement(store_ui_1.Alert, { variant: "signInDanger" }, formatMessage({
                id: 'login.page.emailVerification.emailForm.invalidEmailInput',
                defaultMessage: 'Please insert a valid email',
            }))),
            state === 'emailForm.authError' && (react_1.default.createElement(store_ui_1.Alert, { variant: "signInDanger" }, formatMessage({
                id: 'login.page.emailVerification.emailForm.error',
                defaultMessage: 'Something went wrong, please try again later',
            }))),
            react_1.default.createElement(store_ui_1.Button, null, formatMessage({
                id: 'login.page.emailVerification.emailForm.submitButton',
                defaultMessage: 'Send',
            })))));
};
exports.default = EmailForm;
