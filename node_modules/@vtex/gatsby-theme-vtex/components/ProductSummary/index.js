"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fragment = void 0;
const gatsby_1 = require("gatsby");
const react_1 = __importDefault(require("react"));
const store_ui_1 = require("@vtex/store-ui");
const ProductSummary = () => (react_1.default.createElement(store_ui_1.Flex, { sx: { flexWrap: 'wrap' } },
    react_1.default.createElement(store_ui_1.Center, { height: "50px" },
        react_1.default.createElement(store_ui_1.Text, null, "This is the product summary component")),
    react_1.default.createElement(store_ui_1.Center, { height: "120px" },
        react_1.default.createElement(store_ui_1.Text, null, "This component is used in many different parts of your store, like in the shelf and search results")),
    react_1.default.createElement(store_ui_1.Center, { height: "120px" },
        react_1.default.createElement(store_ui_1.Text, null,
            "Base building blocks are available in ",
            react_1.default.createElement("strong", null, "@vtex/store-ui"),
            ". Use them to create your own cusstom version of product summary via Shadowing."))));
exports.fragment = gatsby_1.graphql `
  fragment ProductSummary_product on VTEX_Product {
    productId
    productName
    linkText
    productClusters {
      name
    }
    items {
      itemId
      images {
        imageUrl
        imageText
      }
      sellers {
        sellerId
        commercialOffer: commertialOffer {
          maxInstallments: Installments(criteria: MAX_WITHOUT_INTEREST) {
            value: Value
            numberOfInstallments: NumberOfInstallments
          }
          installments: Installments(criteria: ALL) {
            value: Value
            numberOfInstallments: NumberOfInstallments
            interestRate: InterestRate
          }
          availableQuantity: AvailableQuantity
          price: Price
          listPrice: ListPrice
          spotPrice
          teasers {
            name
          }
        }
      }
    }
  }
`;
exports.default = ProductSummary;
