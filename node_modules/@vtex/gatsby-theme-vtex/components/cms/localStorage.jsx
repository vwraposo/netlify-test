"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useLocalStorage = void 0;
const react_1 = require("react");
const env_1 = require("../../utils/env");
const getItem = (key) => {
    const item = localStorage.getItem(key);
    return item ? JSON.parse(item) : item;
};
// A hook that uses the local storage and updates when a
// storage updates
exports.useLocalStorage = (key) => {
    const [storage, setStorage] = react_1.useState(() => env_1.isServer ? null : getItem(key));
    react_1.useEffect(() => {
        window.addEventListener('storage', () => {
            const oldStorage = JSON.stringify(storage);
            const newStorage = localStorage.getItem(key);
            if (oldStorage !== newStorage) {
                const element = newStorage && JSON.parse(newStorage);
                setStorage(element);
            }
        });
    }, [key, storage]);
    return storage;
};
