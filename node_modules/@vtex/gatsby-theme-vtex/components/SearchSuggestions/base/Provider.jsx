"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const store_ui_1 = require("@vtex/store-ui");
const hooks_1 = require("./hooks");
const hooks_2 = require("../../SearchBar/hooks");
const SearchSuggestionsProvider = ({ children }) => {
    const searchbarContext = hooks_2.useSearchBarContext();
    const searchbarTerm = searchbarContext.asyncTerm;
    const [term, setTerm] = react_1.useState(searchbarTerm);
    react_1.useEffect(() => {
        setTerm(searchbarTerm);
    }, [searchbarTerm]);
    return (<hooks_1.SearchSuggestionsContext.Provider value={{
        term,
        setTerm,
        searchBar: searchbarContext,
    }}>
      <store_ui_1.Flex variant="suggestions">{children}</store_ui_1.Flex>
    </hooks_1.SearchSuggestionsContext.Provider>);
};
exports.default = SearchSuggestionsProvider;
