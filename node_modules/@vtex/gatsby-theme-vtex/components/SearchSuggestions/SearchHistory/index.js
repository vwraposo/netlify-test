"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const gatsby_plugin_i18n_1 = require("@vtex/gatsby-plugin-i18n");
const store_ui_1 = require("@vtex/store-ui");
const react_1 = __importDefault(require("react"));
const Container_1 = require("../base/Container");
const List_1 = require("../base/List");
const Title_1 = require("../base/Title");
const hooks_1 = require("./hooks");
const Icon_1 = __importDefault(require("./Icon"));
const SearchSuggestionsHistory = ({ variant }) => {
    const { formatMessage } = gatsby_plugin_i18n_1.useIntl();
    const { searches, searchBar: { onSearch }, } = hooks_1.useSearchHistory();
    const title = formatMessage({
        id: 'suggestions.history.title',
        defaultMessage: 'History',
    });
    if (!searches) {
        return null;
    }
    if (searches.length === 0) {
        return (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement(Title_1.SearchSuggestionsListTitle, { variant: variant, title: title }),
            react_1.default.createElement(store_ui_1.Center, null, formatMessage({
                id: 'suggestions.history.empty',
                defaultMessage: 'No history yet',
            }))));
    }
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(Title_1.SearchSuggestionsListTitle, { variant: variant, title: formatMessage({
                id: 'suggestions.history.title',
                defaultMessage: 'History',
            }) }),
        react_1.default.createElement(List_1.SearchSuggestionsList, { items: searches, variant: variant }, ({ item: { term }, variant: v }) => (react_1.default.createElement(store_ui_1.Box, { onClick: () => onSearch(term), variant: v },
            react_1.default.createElement("span", null,
                react_1.default.createElement(Icon_1.default, null)),
            term)))));
};
const SearchSuggestions = ({ variant = 'history' }) => (react_1.default.createElement(Container_1.SearchSuggestionsListContainer, { variant: variant, fallback: null },
    react_1.default.createElement(SearchSuggestionsHistory, { variant: variant })));
exports.default = SearchSuggestions;
