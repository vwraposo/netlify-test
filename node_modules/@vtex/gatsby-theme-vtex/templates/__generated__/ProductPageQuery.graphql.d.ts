/**
 * Warning: This is an autogenerated file.
 *
 * Changes in this file won't take effect and will be overwritten
 */
declare type Exact<T extends {
    [key: string]: unknown;
}> = {
    [K in keyof T]: T[K];
};
declare type Maybe<T> = T | null | undefined;
declare type Scalars = {
    Boolean: boolean;
    String: string;
    Float: number;
    Int: number;
    ID: string;
};
export declare type ProductPageQueryQueryVariables = Exact<{
    slug: Maybe<Scalars['String']>;
    staticPath: Scalars['Boolean'];
}>;
export declare type ProductPageQueryQuery = {
    vtex: {
        product: Maybe<{
            productReference: Maybe<string>;
            productName: Maybe<string>;
            linkText: Maybe<string>;
            description: Maybe<string>;
            brand: Maybe<string>;
            productId: Maybe<string>;
            items: Maybe<Array<Maybe<{
                itemId: Maybe<string>;
                images: Maybe<Array<Maybe<{
                    imageUrl: Maybe<string>;
                    imageText: Maybe<string>;
                }>>>;
                videos: Maybe<Array<Maybe<{
                    videoUrl: Maybe<string>;
                }>>>;
                sellers: Maybe<Array<Maybe<{
                    commercialOffer: Maybe<{
                        price: Maybe<number>;
                        availableQuantity: Maybe<number>;
                        priceValidUntil: Maybe<string>;
                    }>;
                }>>>;
            }>>>;
            productClusters: Maybe<Array<Maybe<{
                name: Maybe<string>;
            }>>>;
            categoryTree: Maybe<Array<Maybe<{
                name: Maybe<string>;
                href: Maybe<string>;
            }>>>;
        }>;
    };
};
export declare const ProductPageQuery: {
    query: undefined;
    sha256Hash: string;
    operationName: string;
};
export {};
