"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDepartmentNode = exports.createChannelNode = void 0;
exports.createChannelNode = ({ actions: { createNode }, createNodeId, createContentDigest, }, _a) => {
    var _b;
    var { extraContext } = _a, channel = __rest(_a, ["extraContext"]);
    const NODE_TYPE = 'Channel';
    const data = Object.assign({ salesChannel: (_b = extraContext === null || extraContext === void 0 ? void 0 : extraContext.portal) === null || _b === void 0 ? void 0 : _b.salesChannel }, channel);
    createNode(Object.assign(Object.assign({}, data), { id: createNodeId(`${NODE_TYPE}-${data.id}`), internal: {
            type: NODE_TYPE,
            content: JSON.stringify(data),
            contentDigest: createContentDigest(data),
        } }));
};
exports.createDepartmentNode = ({ actions: { createNode }, createNodeId, createContentDigest, }, _a) => {
    var { id, children } = _a, department = __rest(_a, ["id", "children"]);
    const NODE_TYPE = 'Department';
    const data = Object.assign(Object.assign({}, department), { slug: new URL(department.url).pathname, subCategories: children.map((subCategory) => (Object.assign(Object.assign({}, subCategory), { slug: new URL(subCategory.url).pathname }))) });
    createNode(Object.assign(Object.assign({}, data), { id: createNodeId(`${NODE_TYPE}-${id}`), internal: {
            type: NODE_TYPE,
            content: JSON.stringify(data),
            contentDigest: createContentDigest(data),
        } }));
};
