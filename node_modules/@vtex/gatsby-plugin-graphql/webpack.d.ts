import { GraphQLSchema } from 'graphql';
import { Node } from './manager';
export interface QueryInfo {
    query?: string;
    sha256Hash: string;
}
export declare const persisted = "persisted.graphql.json";
export declare const queryInfo = "queryInfo.graphql.json";
export declare const publicPath = "/page-data/_graphql";
export declare const target: string;
declare type QueryNode = Node & {
    sha256Hash: string;
};
declare type FragmentNode = Node;
export declare class WebpackPlugin {
    schema: GraphQLSchema;
    persistedPath: string;
    queryInfoPath: string;
    constructor(schema: GraphQLSchema);
    optimizeQuery: (query: string) => string;
    generateCode: (nodes: Array<QueryNode | FragmentNode>) => Promise<{
        value: string;
        filename: string;
        name: string;
    }[]>;
    apply(compiler: any): void;
}
export {};
