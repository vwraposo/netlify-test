"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.replaceRenderer = exports.wrapRootElement = void 0;
const react_1 = __importDefault(require("react"));
const server_1 = require("react-dom/server");
const core_1 = require("@emotion/core");
const create_emotion_server_1 = __importDefault(require("create-emotion-server"));
const cache_1 = __importDefault(require("@emotion/cache"));
const { ThemeProvider } = require('./src/components/Provider');
exports.wrapRootElement = ({ element }) => (react_1.default.createElement(ThemeProvider, null, element));
// The following function was heavily inspired in emotion's advanced SSR approach
// https://github.com/emotion-js/emotion/blob/4400d8564c771953121342c20f6ad764a0830328/docs/ssr.mdx
exports.replaceRenderer = ({ bodyComponent, replaceBodyHTMLString, setHeadComponents, }) => {
    const cache = cache_1.default();
    const { extractCritical } = create_emotion_server_1.default(cache);
    const root = (react_1.default.createElement(core_1.CacheProvider, { value: cache }, bodyComponent));
    const { html, css, ids } = extractCritical(server_1.renderToString(root));
    setHeadComponents([
        react_1.default.createElement("style", { key: "data-emotion-css", "data-emotion-css": ids.join(' '), dangerouslySetInnerHTML: { __html: css } }),
    ]);
    replaceBodyHTMLString(html);
};
